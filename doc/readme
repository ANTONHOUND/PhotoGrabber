Readme for PhotoGrabber 2.1

0. Compatibility

* As of version 2.1 PhotoGrabber will only be available for Haiku R1. The USB stack of Haiku R1 as now stable enough to run USB capable software like PhotoGrabber.

1. Compiling PhotoGrabber

* To compile PhotoGrabber you have to run the PG.sh script. It is a script that will compile the whole program and it's parts (plugins & extensions). When the build is complete the script creates a folder "build" and in there you can find the folder "PhotoGrabber".

* The makefiles can be used to build each part of PhotoGrabber seperatly. There is no need to perform a complete new build each time some part is updated (note that the project is still pretty small for now that can change over the years - we atleast hope so).  For this case you can find a seperate makefile for each part that you can run from the Terminal.

2. Plugins

* PhotoGrabber has a plugin system which is based on the BDCP2 API created by Graham Wharton (Creator of Exposure!). With this system it is possible to add support to more cameras.

* At this moment PhotoGrabber only supports PTP (Picture Transfer Protocol) cameras. In the future we want to add Mass Storage and bluethooth support. 

* It is possible to create your own plugin for your camera. You just have to copy your BDCP2 compatible plugin into the plugins directory. PhotoGrabber will then detect your plugin which you then can use for your camera(s). 

3. The history of PhotoGrabber -- Jixt you need to fill in the blanks here. ;)


* Versions 0.x:  

The first version of PhotoGrabber was called 'BeCam' and started out as a small cli based application which could connect to your camera and download the pictures to the computer. It was available for R5 together with the experimental USB stack. Although it ran well, it was not that stable due to the crappy USB stack. Haiku had no USB stack back then. Over the time you could define the place where the pictures should be saved.

* Versions 1.x: 

'BeCam' grew from a cli application to a GUI app and was able to use all default BDCP plugins of 'Exposure!'. After some time the development of'BeCam' moved to ZETA. 'BeCam' grew out to become 'BeDiGiCam'and after that 'PhotoGrabber'. 'PhotoGrabber' was a good name which didn't refer to BeOs. Time went by and 'PhotoGrabber'became part of ZETA. Sources where still owned by Jixt over the whole period. 'PhotoGrabber' started to use the locale kit in ZETA and is since then translated into 14 different languages. After the demise of ZETA, Jixt desided to opensource 'PhotoGrabber'. This because he had less time to do the development and he didn't want 'PhotoGrabber' to end together with ZETA.

* Versions 2.x: 

As of version 2.x, 'PhotoGrabber' went opensource! Although Jixt had less time to develop for it, he rewrote 'PhotoGrabber'. He broke up the application into multiple parts (application core, interface, plugins and extensions). With this step it was easier for other developers to write their own plugins and extensions (add-ons) for the application. After he was done with the main parts he opensourced the project and attracted a small crew to help out with the developping.


4. TODO

* It is not yet possible to make extensions for PhotoGrabber. This will be developed in future versions.

* In time the listview with the pictures will change. It will become a grid

* Support for Mass Storage, Bluetooth via plugins ...
 

Have fun with it!
 The PhotoGrabber Team
 
 
